server {
    listen 443 ssl http2; # managed by Certbot
    listen [::]:443 ssl http2; # managed by Certbot
 
    server_name manager.silene.eu;
 
    location / { 
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $realip_remote_addr;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    
        proxy_pass http://127.0.0.1:9000/;# ATTENTION : bien mettre un slash final ! Sinon => erreur 404
    }   

    location /api/websocket/ {
        set $upstream_endpoint http://127.0.0.1:9000;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        add_header X-Upstream $upstream_addr;
        proxy_http_version 1.1;
        proxy_pass $upstream_endpoint;
        # Need this for the console
        proxy_redirect http://127.0.0.1:9000 $scheme://$host/;
    }   

    ssl_certificate /etc/letsencrypt/live/manager.silene.eu/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/manager.silene.eu/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    listen 80; 
    listen [::]:80;
 
    server_name manager.silene.eu;

    return 302 https://manager.silene.eu$request_uri;
}
