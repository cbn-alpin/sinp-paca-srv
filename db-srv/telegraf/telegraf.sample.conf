# Get this config file with : docker run --rm telegraf:1.13.0 -sample-config > telegraf/telegraf.sample.conf

# Telegraf Configuration Example
[global_tags]

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

[[outputs.influxdb]]
  urls = ["http://<influxdb-host-ip>:8086"]
  database = "telegraf"

[[inputs.conntrack]]
  files = ["ip_conntrack_count", "ip_conntrack_max", "nf_conntrack_count", "nf_conntrack_max"]
  dirs = ["/host/proc/sys/net/ipv4/netfilter","/host/proc/sys/net/netfilter"]

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  mount_points = ["/host/etc", "/host/data"]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.diskio]]
  devices = ["sda", "sdb"]

[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  #source_tag = false
  ## Containers to include and exclude. Collect all if empty. Globs accepted.
  container_name_include = []
  container_name_exclude = []
  timeout = "5s"
  perdevice = true
  total = false
  docker_label_include = []
  docker_label_exclude = []
  #tag_env = ["JAVA_HOME", "HEAP_SIZE"]

[[inputs.exec]]
  commands = [
    "cat /opt/srvstatus/status.json"
  ]
  timeout = "5s"
  name_override = "services_stats"
  data_format = "json"
  tag_keys = [
    "service"
  ]

[[inputs.influxdb]]
  urls = [
    "http://<influxdb-host-ip>:8086/debug/vars"
  ]

[[inputs.internal]]

[[inputs.interrupts]]
  cpu_as_tag = true
  [inputs.interrupts.tagdrop]
    irq = ["NET_RX", "TASKLET"]

[[inputs.kernel]]

[[inputs.linux_sysctl_fs]]

[[inputs.mem]]

[[inputs.net]]

[[inputs.netstat]]

[[inputs.nstat]]
  proc_net_netstat = "/host/proc/net/netstat"
  proc_net_snmp = "/host/proc/net/snmp"
  proc_net_snmp6 = "/host/proc/net/snmp6"
  dump_zeros = true

[[inputs.postgresql]]
address = "host=<docker-user-network-gateway-ip> user=<user> password=<password> dbname=<db-name> sslmode=disable"
outputaddress="<name-for-pgsql>"
max_lifetime = "0s"
databases = ["<db-name-1>", "<db-name-2>"]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]
