version: "3.9"

services:

  preprod-nginx:
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    image: nginx:1.24.0-bullseye
    # https://hub.docker.com/_/nginx
    container_name: preprod-nginx
    restart: unless-stopped
    expose:
      - 80
    environment:
      VIRTUAL_HOST: gnpp.silene.eu,uhpp.silene.eu,thpp.silene.eu,gnapp.silene.eu
      LETSENCRYPT_HOST: gnpp.silene.eu,uhpp.silene.eu,thpp.silene.eu,gnapp.silene.eu
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:9090/nginx_status || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./nginx/sites-available/:/etc/nginx/sites-available/:ro
      - ./nginx/sites-enabled/:/etc/nginx/sites-enabled/:ro
      # WARNING: Check if we can use ":ro" for /home/geonat/www/.
      - /home/geonat/www/:/home/geonat/www:ro

  preprod-postgres:
    image: ${POSTGRES_IMAGE:-postgis/postgis:15-3.3}
    container_name: preprod-postgres
    restart: unless-stopped
    logging:
      options:
        max-size: 10m
        max-file: 5
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_HOST-127.0.0.1}:${POSTGRES_PORT-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ${POSTGRES_INIT_DB_DIR-./postgres/initdb}:/docker-entrypoint-initdb.d/
      - data-postgres-storage:/var/lib/postgresql/data
      - socket-postgres-storage:/var/run/postgresql

  preprod-postgres-restore:
    image: ${POSTGRES_IMAGE:-postgis/postgis:15-3.3}
    container_name: preprod-postgres-restore
    restart: "no"
    profiles: ["restore"]
    depends_on:
      preprod-postgres:
        condition: service_healthy
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=preprod-postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_RESTORE_FILE=${POSTGRES_RESTORE_FILE}
    volumes:
      - ${POSTGRES_RESTORE_DIR-./postgres/restore}:/restore/
      - socket-postgres-storage:/var/run/postgresql
    command: /restore/restore.sh -d "${POSTGRES_RESTORE_FILE}"

volumes:
  data-postgres-storage:
  socket-postgres-storage:

networks:
  default:
    name: nginx-proxy
    external: true
